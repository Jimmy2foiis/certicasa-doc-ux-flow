
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model File {
  id                String            @id
  fileId            String
  fileUrl           String
  folderType        FoldersKey
  fileType          FilesType
  createdAt         DateTime          @default(now())
  updatedAt         DateTime
  name              String?
  beetoolToken      String
  driveFolderId     String
  subFolderId       String?
  Prospect          Prospect          @relation(fields: [beetoolToken], references: [beetoolToken], onDelete: Cascade)
  GoogleDriveFolder GoogleDriveFolder @relation(fields: [driveFolderId], references: [id], onDelete: Cascade)
  SubFolder         SubFolder?        @relation(fields: [subFolderId], references: [id])
}

model GoogleDriveFolder {
  id           String      @id
  beetoolToken String      @unique
  folderId     String
  folderUrl    String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime
  File         File[]
  Prospect     Prospect    @relation(fields: [beetoolToken], references: [beetoolToken], onDelete: Cascade)
  SubFolder    SubFolder[]
}

model Prospect {
  id                   String             @id
  beetoolToken         String             @unique
  prenom               String
  nom                  String
  sexe                 String?
  adresse              String
  codePostal           String
  ville                String
  pays                 String
  tel                  String?
  email                String?
  cadastralReference   String?
  utm30                String?
  safetyCultureAuditId String?
  geoPosition          String?
  status               Status             @default(DONNEE_RECUPEREE)
  createdAt            DateTime           @default(now())
  updatedAt            DateTime
  File                 File[]
  GoogleDriveFolder    GoogleDriveFolder?
  Webhook              Webhook[]
}

model SubFolder {
  id                String            @id
  folderId          String
  folderType        FoldersKey
  driveFolderId     String
  createdAt         DateTime          @default(now())
  updatedAt         DateTime
  File              File[]
  GoogleDriveFolder GoogleDriveFolder @relation(fields: [driveFolderId], references: [id], onDelete: Cascade)
  Webhook           Webhook[]
}

model Webhook {
  id           String     @id
  beetoolToken String
  webhookId    String
  folderType   FoldersKey
  folderId     String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime
  Prospect     Prospect   @relation(fields: [beetoolToken], references: [beetoolToken], onDelete: Cascade)
  SubFolder    SubFolder  @relation(fields: [folderId], references: [id])
}

enum FilesType {
  SIGNATURE_NOMBRE_APELLIDO
  FIRMA
  NIF
  NIE
  UNKNOWN
}

enum FoldersKey {
  FICHA
  DR_AYUDA
  FACTURAS
  INFORMES_FOTOGRAFICOS
  CERTIFICADO_INSTALADOR
  CEEE
  ACUERDO_CESION_DE_AHORROS
  DNI_CLIENT
  SIGNATURE
  PHOTOS
}

enum Status {
  DONNEE_RECUPEREE
  INITIALISATION_DONE_WAITING_FOR_CEE
  CEE_CREATED
  CONTACTED
  CONVERTED
  REJECTED
}
