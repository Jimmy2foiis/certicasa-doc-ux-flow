datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

/// Modèle principal pour la table `clients`
model Client {
  id                     String   @id @default(uuid()) @db.Uuid
  beetoolToken           String   @db.VarChar(50)
  prenom                 String   @db.VarChar(100)
  nom                    String   @db.VarChar(100)
  sexe                   String   @db.VarChar(10)
  adresse                String   @db.Text
  codePostal             String   @db.VarChar(20)
  ville                  String   @db.VarChar(100)
  pays                   String   @db.VarChar(100)
  tel                    String   @db.VarChar(30)
  email                  String   @db.VarChar(150)
  cadastralReference     String   @db.VarChar(100)
  utm30                  String?  @db.VarChar(100)
  safetyCultureAuditId   String   @db.VarChar(100)
  geoPosition            String   @db.VarChar(100)
  status                 String   @default("INITIALISATION_DONE_WAITING_FOR_CEE") @db.VarChar(100)
  createdAt              DateTime @default(now()) @db.Timestamptz(6)
  updatedAt              DateTime @updatedAt @db.Timestamptz(6)

  // Relations
  projects   Project[]
  documents  Document[]
}

/// Projet énergétique réalisé pour un client (structure minimale, à détailler plus tard)
model Project {
  id         String   @id @default(uuid()) @db.Uuid
  clientId   String   @db.Uuid
  name       String   @db.VarChar(150)
  type       String?  @db.VarChar(100)
  status     String   @default("En cours") @db.VarChar(50)
  surface    Float?   @db.Decimal(10,2)
  createdAt  DateTime @default(now()) @db.Timestamptz(6)

  client     Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  documents  Document[]
}

/// Documents (PDF, etc.) liés à un client ou un projet
model Document {
  id         String   @id @default(uuid()) @db.Uuid
  clientId   String?  @db.Uuid
  projectId  String?  @db.Uuid
  name       String   @db.VarChar(200)
  type       String?  @db.VarChar(100)
  status     String   @default("Actif") @db.VarChar(50)
  filePath   String?  @db.Text
  createdAt  DateTime @default(now()) @db.Timestamptz(6)

  client     Client?  @relation(fields: [clientId], references: [id], onDelete: Cascade)
  project    Project? @relation(fields: [projectId], references: [id], onDelete: Cascade)
} 