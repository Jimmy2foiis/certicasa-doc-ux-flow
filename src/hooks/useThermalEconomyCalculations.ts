
import { useState } from "react";
import { climateZoneCoefficients } from "@/components/calculations/ThermalEconomySection";

// Delegate multipliers
const delegateMultipliers = {
  "Eiffage": 0.130,
  "GreenFlex": 0.115,
};

interface UseThermalEconomyCalculationsProps {
  surfaceArea: number;
  uValueBefore: number;
  uValueAfter: number;
  climateZone?: string;
  onClimateZoneChange?: (zone: string) => void;
}

export const useThermalEconomyCalculations = ({
  surfaceArea,
  uValueBefore,
  uValueAfter,
  climateZone = "C3",
  onClimateZoneChange
}: UseThermalEconomyCalculationsProps) => {
  const [cherryEnabled, setCherryEnabled] = useState(false);
  const [delegate, setDelegate] = useState<"Eiffage" | "GreenFlex">("Eiffage");

  // ðŸ”´ DEBUG HOOK - VÃ©rifier la zone reÃ§ue
  console.error('ðŸ”´ useThermalEconomyCalculations - Zone reÃ§ue:', climateZone);
  console.error('ðŸ”´ useThermalEconomyCalculations - Zone par dÃ©faut utilisÃ©e?', climateZone === "C3" ? "OUI - PROBLÃˆME!" : "NON - OK");

  // Utiliser DIRECTEMENT la zone reÃ§ue, pas d'Ã©tat local
  const gCoefficient = climateZoneCoefficients[climateZone] || 46;
  
  // ðŸ”´ DEBUG - VÃ©rification coefficient
  console.error('ðŸ”´ useThermalEconomyCalculations - Coefficient G calculÃ©:', gCoefficient);
  console.error('ðŸ”´ useThermalEconomyCalculations - Pour zone:', climateZone);
  if (climateZone === "D2") {
    console.error('ðŸ”´ PARFAIT! Zone D2 dÃ©tectÃ©e avec G=60');
  } else {
    console.error('ðŸ”´ PROBLÃˆME! Zone devrait Ãªtre D2, pas', climateZone);
  }
  
  // Helper function to get coefficient for any zone
  const getCoefficient = (zone: string) => climateZoneCoefficients[zone] || 46;
  
  // Get multiplier based on delegate
  const multiplier = delegateMultipliers[delegate];
  
  // Calculate annual savings in kWh/year
  const annualSavings = surfaceArea * (uValueBefore - uValueAfter) * gCoefficient;
  
  // Calculate project price in EUR
  const projectPrice = annualSavings * multiplier;
  
  // Calculate price per mÂ²
  const pricePerSqm = projectPrice / surfaceArea;
  
  // Calculate Cherry prices (10%)
  const cherryPricePerSqm = pricePerSqm * 0.1;
  const cherryProjectPrice = projectPrice * 0.1;
  
  // Total prices with Cherry
  const totalPricePerSqm = pricePerSqm + cherryPricePerSqm;
  const totalProjectPrice = projectPrice + cherryProjectPrice;

  // ðŸ”´ DEBUG - CALCULS FINAUX
  console.error('ðŸ”´ useThermalEconomyCalculations - CALCUL FINAL:');
  console.error(`ðŸ”´ CAE = ${surfaceArea} Ã— (${uValueBefore} - ${uValueAfter}) Ã— ${gCoefficient} = ${annualSavings}`);
  if (climateZone !== "D2") {
    console.error('ðŸ”´ Si zone Ã©tait D2 (G=60), CAE serait:', surfaceArea * (uValueBefore - uValueAfter) * 60);
  }

  return {
    cherryEnabled,
    setCherryEnabled,
    delegate,
    setDelegate,
    gCoefficient,
    getCoefficient,
    annualSavings,
    projectPrice,
    pricePerSqm,
    cherryPricePerSqm,
    cherryProjectPrice,
    totalPricePerSqm,
    totalProjectPrice
  };
};
